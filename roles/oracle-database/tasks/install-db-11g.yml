---
- name: validate oracle database 11g release is supported
  fail: "msg='release is not valid (supported versions: [11.2.0.4])'"
  when: release is defined and release != '11.2.0.4'

- name: evaluate oracle database 11g 11.2.0.4 installers
  stat: path="roles/oracle-database/files/{{ item.path }}"
  register: zips_state
  with_items: "{{ installers_11_2_0_4 }}"
  when: release == '11.2.0.4'

- name: validation results
  debug:
    var: zips_state

- name: validate installation zips exist
  fail: msg="installation zip file {{ item.item.path }} is not present"
  when: not item.stat.exists or not item.stat.isreg
  with_items: "{{ zips_state.results }}"

- name: validate installation zips checksum
  fail: msg="installation zip file {{ item.item.path }} is not valid"
  when: item.stat.checksum != item.item.checksum
  with_items: "{{ zips_state.results }}"

- name: install the latest version of unzip
  yum: name=unzip state=latest

- name: "unzip installation files"
  unarchive: src="roles/oracle-database/files/{{ item.path }}" dest=/tmp
  with_items: "{{ installers_11_2_0_4 }}"
  when: release == '11.2.0.4'

- name: "create {{ item }} group"
  group: "name={{ item }} state=present"
  with_items:
    - "{{ os_group }}"
    - "{{ os_dba_group }}"
- name: Create User
  user:
    name: "{{ os_user }}"
    shell: /bin/bash
    group: "{{ os_group }}"
    groups: "{{ os_dba_group }}"
    append: yes

- name: config limits.conf
  lineinfile:
    dest: /etc/security/limits.conf
    state: present
    insertbefore: "# End of file"
    line: "{{ item }}"
  with_items:
    - "{{ os_user }}             soft    nproc          16384"
    - "{{ os_user }}             hard    nproc          16384"
    - "{{ os_user }}             soft    nofile         65536"
    - "{{ os_user }}             hard    nofile         65536"

# Check support in Docker
# - sysctl: name=net.core.rmem_max value=4192608 state=present
# - sysctl: name=net.core.wmem_max value=4192608 state=present

- name: install pre-installation package
  yum: name=oracle-rdbms-server-11gR2-preinstall

- file:
    path: "{{ item }}"
    state: directory
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  with_items:
    - "{{ inventory_location }}"
    - "{{ oracle_base }}"
    - "{{ oracle_home }}"

- name: preparing database installation template
  template: src=../templates/db-install.rsp.j2 dest=/tmp/db-install.rsp
  become: yes
  become_user: "{{ os_user }}"

- name: update required pre-requisites
  lineinfile:
    dest: /tmp/database/stage/cvu/cvu_prereq.xml
    state: present
    regexp: "^<RUNLEVEL>"
    line: '<RUNLEVEL SEVERITY=\"IGNORABLE\">'

- name: run installer
  shell: "/tmp/database/runInstaller -silent -waitforcompletion -ignoreSysPrereqs -responseFile /tmp/db-install.rsp"
  become: yes
  become_user: "{{ os_user }}"
  register: command_result
  failed_when: "'Successfully Setup Software.' not in command_result.stdout_lines"

- name: installation results
  debug:
    var: command_result

- name: run post-installation scripts as root
  shell: "{{item}}"
  become: yes
  become_user: "root"
  with_items:
    - "{{ inventory_location }}/orainstRoot.sh"
    - "{{ oracle_home }}/root.sh"
  when: "'Successfully Setup Software.' in command_result.stdout_lines"
